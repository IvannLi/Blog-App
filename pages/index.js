import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useRouter } from 'next/router'
import { useState } from 'react'
import axios from 'axios'
import { prisma } from '../server/db/client'
import { authOptions } from 'pages/api/auth/[...nextauth]'
import { getServerSession } from "next-auth/next"
import { useSession } from "next-auth/react"
import Navbar from '../components/navbar'
import Card from '../components/card'

export default function Blog({ posts }) {
  const r = useRouter();
  const { data: session } = useSession()
  const [content, setContent] = useState('');
  const [signInMessage, setSignInMessage] = useState('')

  const handleSubmit = async () => {
    const { data } = await axios.post('/api/posts', {
      content: content
    })
    
    // if(session) {
    console.log(data)
    setContent('')
    r.push('/')
    // } else {
    //   setSignInMessage('Please sign in to post')
    // }
  }

  return (
    <>
      <Head>
        <title>Create a Post</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Navbar />
        <h1>Boring-ass Blog</h1>
        {/* <p className={styles.signInMessage}>{signInMessage}</p> */}
        <textarea className={styles.input} value={content} onChange={(event) => setContent(event.target.value)} placeholder="Write Something"/>
        <button onClick={() => {handleSubmit()} }>Submit</button>
          {
            posts.map((post) => {
              return (
                <div key={post.id}>
                  <Card 
                    date={post.createdAt}
                    content={post.content}
                  />
                </div>
              )
            })
          }
      </main>
    </>
  )
}

export async function getServerSideProps() {
  // const session = await getServerSession(context.req, context.res, authOptions)
  const posts = await prisma.post.findMany({
    orderBy: {
      createdAt: 'desc'
    }
  })

  return {
    props: {
      // session,
      posts: JSON.parse(JSON.stringify(posts)),
    },
  }
}
